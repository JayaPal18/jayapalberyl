
 File Input/output
 The class IO provides all the basic methods, such as read, write, gets, puts, readline, getc, and printf.
1.puts statement
beryl@beryl-To-be-filled-by-O-E-M:~/Desktop$ irb
3.0.0 :001 > puts"helloworld"
helloworld

2.gets statement
The gets statement can be used to take any input from the user from standard screen called STDIN.

3.0.0 :005 > n=gets.chomp.to_i
34
 => 34 

3.putc 
this will show only the ist character 
3.0.0 :006 > s="hello_world"
 => "hello_world" 
3.0.0 :007 > putc s
h => "hello_world" 

4.print statement
the print statement will same as the put statement but print will not give output in different lines but puts gives every output in new line

3.0.0 :008 > print "helloworld"
helloworld => nil 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
It is a way of processing a file such as creating a new file, reading content in a file, writing content to a file, appending content to a file, renaming the file and deleting the file.

“r” : Read-only mode for a file.
“r+” : Read-Write mode for a file.
“w” : Write-only mode for a file.
“w+” : Read-Write mode for a file.
“a” : Write-only mode, if file exists it will append the data otherwise a new file will be created.
“a+” : Read and Write mode, if file exists it will append the data otherwise a new file will be created.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
How to open a file in ruby
beryl@beryl-To-be-filled-by-O-E-M:~/Desktop$ irb
3.0.0 :001 > simple_file=File.read("/home/beryl/Desktop/sample.txt")
 => "this is the ist sample file which i have completed the contents in la...

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
How to creae a CSV file in linux:
beryl@beryl-To-be-filled-by-O-E-M:~$ cd Desktop/
beryl@beryl-To-be-filled-by-O-E-M:~/Desktop$ cat > user.csv
First_name,Last_name,department,email
jaya,pal,mca,jaya@gmail.com
kajal,rani,math,kajal@gmail.com

beryl@beryl-To-be-filled-by-O-E-M:~/Desktop$ cat user.csv
First_name,Last_name,department,email
jaya,pal,mca,jaya@gmail.com
kajal,rani,math,kajal@gmail.com

* then we can open the file its shows like the database format
and we can retrieve the file from your ruby promt

How to read csv file in ruby nano editor


# retrieve information from user

require 'csv'
class Test
 def retrieve_data

  file1=CSV.read("user1.csv")
 print file1
puts
end
end
t1=Test.new
t1.retrieve_data

output
beryl@beryl-To-be-filled-by-O-E-M:~/Desktop$ ruby get_data.rb
[["First_name", "Last_name", "department", "email"], ["jaya", "pal", "mca", "jaya@gmail.com"], ["kajal", "rani", "math", "kajal@gmail.com"]]

** split method
f1=File.read("sample.txt").split
print f1

output:-
beryl@beryl-To-be-filled-by-O-E-M:~/Desktop$ ruby file.rb
["this", "is", "the", "ist", "sample", "file", "which", "i", "have", "completed", "the", "contents", "in", "last", "friday.", "thankyou"]

File operations in Ruby:
3.0.0 :001 > File.rename("user1.csv","user2.csv")
 => 0 
3.0.0 :002 > File.size("sample.txt")
 => 89 
3.0.0 :003 > File.extname("sample.txt")
 => ".txt" 
3.0.0 :004 > File.extname("time.rb")
 => ".rb" 
3.0.0 :005 > File.extname("time.rb")
 => ".rb" 
3.0.0 :006 > File.dirname("home/time.rb")
 => "home" 
3.0.0 :007 > File.directory?("time.rb")
 => false 
3.0.0 :008 > File.directory?("Ruby")
 => true 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
How to append file content with new content
require 'csv'

class Test
 def retrieve_data

  file1=CSV.read("user2.csv")
 print file1
puts
end
 def append_content

 f1=CSV.open("user2.csv","a+") do |csv|
 csv<<["Name"]
 csv<<["jaya"]
 end
print f1
puts
end
end
 output:
beryl@beryl-To-be-filled-by-O-E-M:~/Desktop$ ruby append_content.rb
[["section"], ["A"], ["Name"], ["jaya"]]
#<CSV:0x000055892cba5aa8>

How to write file content with new content
require 'csv'

class Test
 def retrieve_data

  file1=CSV.read("user2.csv")
 print file1
puts
end
 def append_content

 f1=CSV.open("user2.csv","w+") do |csv|
 csv<<["Name"]
 csv<<["jaya"]
 end
print f1
puts
end
end
 output:
beryl@beryl-To-be-filled-by-O-E-M:~/Desktop$ ruby append_content.rb
[["Name"], ["jaya"]]
#<CSV:0x000055892cba5aa8>


------------------------------------------------------------------------------------------------------------------------------------------------------------------------

